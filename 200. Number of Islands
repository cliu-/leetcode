200. Number of Islands
Medium

Given a 2d grid map of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.

Example 1:

Input:
11110
11010
11000
00000

Output: 1
Example 2:

Input:
11000
11000
00100
00011

Output: 3

```python
class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
```


Runtime: 148 ms, faster than 29.50% of Python online submissions for Number of Islands.
Memory Usage: 22.8 MB, less than 5.40% of Python online submissions for Number of Islands.
```python
def numIslands(grid: List[List[str]]) -> int:
    if not grid: return 0
    m,n=len(grid),len(grid[0])
    cache,res=set(),0
    def func(x,y):
        if (x,y) in cache or x<0 or y<0 or x>=len(grid) or y>=len(grid[0]):
            return
        cache.add((x,y))
        if grid[x][y]=='0':
            return
        func(x+1,y)
        func(x,y+1)
        func(x-1,y)
        func(x,y-1)
    for i in range(m):
        for j in range(n):
            if (i,j) in cache:
                continue
            if grid[i][j]=='1':
                res+=1
                func(i,j)
    return res
```



[["1","1","1","1","0"],["1","1","0","1","0"],["1","1","0","0","0"],["0","0","0","0","0"]]

[["1","1","0","0","0"],["1","1","0","0","0"],["0","0","1","0","0"],["0","0","0","1","1"]]

[["1","1","1"],["0","1","0"],["1","1","1"]]