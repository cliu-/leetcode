153. Find Minimum in Rotated Sorted Array
Medium

Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).

Find the minimum element.

You may assume no duplicate exists in the array.

Example 1:

Input: [3,4,5,1,2] 
Output: 1
Example 2:

Input: [4,5,6,7,0,1,2]
Output: 0

```python
class Solution(object):
    def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
```

Runtime: 28 ms, faster than 59.84% of Python online submissions for Find Minimum in Rotated Sorted Array.
Memory Usage: 12.1 MB, less than 5.72% of Python online submissions for Find Minimum in Rotated Sorted Array.
```python
def findMin(nums):
    if len(nums)==1: return nums[0]
    l,r=0,len(nums)-1
    while l<=r:
        m=l+(r-l)//2
        if nums[m]>nums[r]:
            l=m+1
        elif nums[m]<nums[l]:
            if m>0:
                if nums[m]<nums[m-1]: 
                    return nums[m]
                else: r=m-1
            else: 
                return nums[m]
        else:
            r=m-1
    return nums[l]
```