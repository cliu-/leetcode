243. Shortest Word Distance
Easy

Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

Example:
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Input: word1 = “coding”, word2 = “practice”
Output: 3

Input: word1 = "makes", word2 = "coding"
Output: 1

Note:

You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.

```python
class Solution(object):
    def shortestDistance(self, words, word1, word2):
        """
        :type words: List[str]
        :type word1: str
        :type word2: str
        :rtype: int
        """

```


Runtime: 52 ms, faster than 40.09% of Python online submissions for Shortest Word Distance.
Memory Usage: 16.5 MB, less than 11.76% of Python online submissions for Shortest Word Distance.
```python
def shortestDistance(words, word1, word2):
    i1=i2=-1
    ans=len(words)
    for i,w in enumerate(words):
        if w==word1:
            if i2>-1 and i-i2<ans:
                ans=i-i2
            i1=i
        if w==word2:
            if i1>-1 and i-i1<ans:
                ans=i-i1
            i2=i
    return ans
```