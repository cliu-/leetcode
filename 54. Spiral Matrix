54. Spiral Matrix
Medium

Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example 1:

Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]
Example 2:

Input:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]

```python
class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """

```

1st answer, failed at `[]`, `[2,3]`.
```python
def spiralOrder(matrix):
    if len(matrix)==1: return [matrix[0][0]]
    m,n,l=len(matrix),len(matrix[0]),0
    ans=[]
    while len(ans)<m*n:
        x0,y0,x1,y1=l,l,m-l,n-l
        if x0<=x1-1:
            for i in range(y0,y1): ans.append(matrix[x0][i])
        if y0<=y1-1:
            for i in range(x0+1,x1): ans.append(matrix[i][y1-1])
        if x1-1>x0:
            for i in range(y1-1-1,y0-1,-1): ans.append(matrix[x1-1][i])
        if y0<y1-1:
            for i in range(x1-1-1,x0,-1): ans.append(matrix[i][y0])
        l+=1
    return ans    
```

2nd answer, Runtime: 20 ms, faster than 40.02% of Python online submissions for Spiral Matrix.
Memory Usage: 11.8 MB, less than 51.52% of Python online submissions for Spiral Matrix.
```python
def spiralOrder(matrix):
    if not matrix: return []
    m,n,l=len(matrix),len(matrix[0]),0
    ans=[]
    while len(ans)<m*n:
        x0,y0,x1,y1=l,l,m-l,n-l
        if x0<=x1-1:
            for i in range(y0,y1): ans.append(matrix[x0][i])
        if y0<=y1-1:
            for i in range(x0+1,x1): ans.append(matrix[i][y1-1])
        if x1-1>x0:
            for i in range(y1-1-1,y0-1,-1): ans.append(matrix[x1-1][i])
        if y0<y1-1:
            for i in range(x1-1-1,x0,-1): ans.append(matrix[i][y0])
        l+=1
    return ans    
```

[[1,2,3],[4,5,6],[7,8,9]] == [1,2,3,6,9,8,7,4,5]
[[1, 2, 3, 4],[5, 6, 7, 8],[9,10,11,12]]

[[1, 2, 3, 4,5,5,5],[5, 6, 7, 8,5,5,5],[9,10,11,12,5,5,5],[5, 6, 7, 8,5,5,5]][]