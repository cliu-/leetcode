283. Move Zeroes
Easy

Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]
Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.


```python
class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: None Do not return anything, modify nums in-place instead.
        """
```

Runtime: 56 ms, faster than 20.91% of Python online submissions for Move Zeroes.
Memory Usage: 12.9 MB, less than 13.93% of Python online submissions for Move Zeroes.
```python
def moveZeroes(nums):
    z=n=0
    while n<len(nums) and z<len(nums):
        while z<len(nums) and nums[z]!=0: 
            z+=1
        while n<len(nums) and (n<=z or nums[n]==0): 
            n+=1
        if n<len(nums) and z<len(nums):
            nums[z],nums[n]=nums[n],nums[z]
```


[1,2,3,0,4,0,0,5,0,6,1,7,8,0,0,9,0]