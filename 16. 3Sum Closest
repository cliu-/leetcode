16. 3Sum Closest
Medium

Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

Example:

Given array nums = [-1, 2, 1, -4], and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

```python 
class Solution(object):
    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
```

```python
def threeSumClosest(nums, target):
    if not nums or len(nums)<3: return 0
    if len(nums)==3: return sum(nums)
    nums,last,ans=sorted(nums),[],[2**32,2**32]
    for i in xrange(len(nums)-2):
        if last and nums[i]==last[0]: continue
        if not last: last.append(nums[i])
        else: last[0]=nums[i]
        t,l,r=target-nums[i],i+1,len(nums)-1
        while l<r:
            sm=nums[i]+nums[l]+nums[r]
            dif=target-sm
            if dif==0: return target
            if abs(dif)<abs(ans[0]): ans[0],ans[1]=dif,sm
            if dif>0: l=l+1
            else: r=r-1
    return ans[1]
```

threeSumClosest([0,0,0],1)==0
threeSumClosest([-1, 2, 1, -4],1)==2
threeSumClosest([-1,2,1,-4,7,9],5)==5