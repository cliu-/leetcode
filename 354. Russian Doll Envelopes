354. Russian Doll Envelopes
Hard

You have a number of envelopes with widths and heights given as a pair of integers (w, h). One envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope.

What is the maximum number of envelopes can you Russian doll? (put one inside other)

Note:
Rotation is not allowed.

Example:

Input: [[5,4],[6,4],[6,7],[2,3]]
Output: 3 
Explanation: The maximum number of envelopes you can Russian doll is 3 ([2,3] => [5,4] => [6,7]).


```python
class Solution(object):
    def maxEnvelopes(self, envelopes):
        """
        :type envelopes: List[List[int]]
        :rtype: int
        """
```


Wrong answer, failed at case `[[1,3],[3,5],[6,7],[6,8],[8,4],[9,5]]`.
```python
def maxEnvelopes(envelopes):
    if len(envelopes)<2:
        return len(envelopes)
    e=sorted(envelopes)
    i=0
    ans=1
    for j in xrange(1,len(e)):
        print('i={},j={},e[i]={},e[j]={}'.format(i,j,e[i],e[j]))
        if e[i][0]==e[j][0]:
            i=i if e[i][1]<=e[j][1] else j
        elif e[i][1]==e[j][1]:
            i=i if e[i][0]<=e[j][0] else j
        elif e[i][1]<e[j][1]:
            ans,i=ans+1,j
        elif e[i][1]>e[j][1]:
            if j+1<len(e) and e[j][0]<e[j+1][0]:
                i=j
        print('ans={}'.format(ans))
    return ans
```


Wrong answer, failed at many corner cases.
```python
from bisect import bisect_left
def maxEnvelopes(envelopes):
    if len(envelopes)<2: return len(envelopes)
    e=sorted(envelopes)
    print(e)
    dp=[(e[0][1],e[0][0])]
    for i in xrange(1,len(e)):
        print('\ne[i]={},dp={}'.format((e[i][1],e[i][0]), dp))
        if e[i][1]>dp[-1][0]:
            if e[i][0]>dp[-1][1]:
                dp.append((e[i][1],e[i][0]))
            print('++dp={}'.format(dp))
        elif e[i][1]<=dp[0][0]:
            if i+1<len(e) and e[i][0]<e[i+1][0]:
                dp[0]=(e[i][1],e[i][0])
            print('--dp={}'.format(dp))
        else:
            j=bisect_left(dp,(e[i][1],e[i][0]))
            print('j={}'.format(j))
            if j==len(dp): 
                continue
            dp[j]=(e[i][1],e[i][0])
            print('==dp={}'.format(dp))
    return len(dp)
```


Runtime: 132 ms, faster than 91.80% of Python online submissions for Russian Doll Envelopes.
Memory Usage: 14.2 MB, less than 11.11% of Python online submissions for Russian Doll Envelopes.
```python
def maxEnvelopes(envelopes):
    e=sorted(envelopes, key=lambda x: (x[0],-x[1]))
    def lis(arr):
        dp=[]
        for n in arr:
            i=bisect_left(dp,n)
            if i==len(dp):
                dp.append(n)
            else:
                dp[i]=n
        return len(dp)
    return lis([t[1] for t in e])

```


maxEnvelopes([[5,4],[6,4],[6,7],[2,3]])==3

maxEnvelopes([[1,3],[3,5],[6,7],[6,8],[8,4],[9,5]])==3

maxEnvelopes([[30,50],[12,2],[3,4],[12,15]])==3

maxEnvelopes([[2,100],[3,200],[4,300],[5,500],[5,400],[5,250],[6,370],[6,360],[7,380]])==5

[[15,8],[2,20],[2,14],[4,17],[8,19],[8,9],[5,7],[11,19],[8,11],[13,11],[2,13],[11,19],[8,11],[13,11],[2,13],[11,19],[16,1],[18,13],[14,17],[18,19]]