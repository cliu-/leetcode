323. Number of Connected Components in an Undirected Graph
Medium

Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to find the number of connected components in an undirected graph.

Example 1:
Input: n = 5 and edges = [[0, 1], [1, 2], [3, 4]]

     0          3
     |          |
     1 --- 2    4 

Output: 2


Example 2:
Input: n = 5 and edges = [[0, 1], [1, 2], [2, 3], [3, 4]]

     0           4
     |           |
     1 --- 2 --- 3

Output:  1
Note:
You can assume that no duplicate edges will appear in edges. Since all edges are undirected, [0, 1] is the same as [1, 0] and thus will not appear together in edges.


```python
class Solution(object):
    def countComponents(self, n, edges):
        """
        :type n: int
        :type edges: List[List[int]]
        :rtype: int
        """
```


Runtime: 92 ms, faster than 52.66% of Python online submissions for Number of Connected Components in an Undirected Graph.
Memory Usage: 15.1 MB, less than 7.69% of Python online submissions for Number of Connected Components in an Undirected Graph.
```python
from collections import defaultdict
def countComponents(n, edges):
    g=defaultdict(set)
    for e in edges:
        g[e[0]].add(e[1])
        g[e[1]].add(e[0])
    for v in xrange(v):
        if v not in g:
            g[v].add(v)
    def func(v,visiting=set()):
        if v in visiting: return
        visiting.add(v)
        while g[v]:
            vv=g[v].pop()
            func(vv,visiting)
        visiting.remove(v)
        g.pop(v)
    ans=0
    for v in xrange(v):
        if v not in g:
            continue
        func(v)
        ans+=1
    return ans
```

4
[[2,3],[1,2],[1,3]]
2


5
[[0, 0], [1, 1], [2, 3], [3, 4],[2,4]]
2


4
[[0,1],[0,2],[1,2]]
2