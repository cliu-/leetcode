273. Integer to English Words
Hard

Convert a non-negative integer to its english words representation. Given input is guaranteed to be less than 231 - 1.

Example 1:

Input: 123
Output: "One Hundred Twenty Three"

Example 2:

Input: 12345
Output: "Twelve Thousand Three Hundred Forty Five"

Example 3:

Input: 1234567
Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"

Example 4:

Input: 1234567891
Output: "One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One"

```python
class Solution(object):
    def numberToWords(self, num):
        """
        :type num: int
        :rtype: str
        """
```


Runtime: 24 ms, faster than 34.35% of Python online submissions for Integer to English Words.
Memory Usage: 12 MB, less than 6.67% of Python online submissions for Integer to English Words.
```python
def numberToWords(num):
    arr=['Hundred','Billion','Million','Thousand','']
    map={0:'Zero',1:'One',2:'Two',3:'Three',4:'Four', \
        5:'Five',6:'Six',7:'Seven',8:'Eight',9:'Nine', \
        10:'Ten',11:'Eleven',12:'Twelve',13:'Thirteen',14:'Fourteen',15:'Fifteen', \
        16:'Sixteen',17:'Seventeen',18:'Eighteen',19:'Nineteen',20:'Twenty', \
        30:'Thirty',40:'Forty',50:'Fifty',60:'Sixty', \
        70:'Seventy',80:'Eighty',90:'Ninety' }
    if num in map: return map[num]
    def func(num, cur=[]):
        if num==0: return cur
        t,num,b=num%1000,num//1000,arr.pop()
        if t==0: return func(num,cur)
        q,r,s=t%100,t//100,[]
        if r>0: s=[map[r],arr[0]]
        if q>0:
            if q in map: 
                s.append(map[q])
            else:
                s.append(map[(q//10)*10])
                s.append(map[q%10])
        if s: s.append(b)
        return func(num, s+cur)
    return ' '.join(func(num)).strip()
```