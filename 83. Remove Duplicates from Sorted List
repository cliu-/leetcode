83. Remove Duplicates from Sorted List
Easy

Given a sorted linked list, delete all duplicates such that each element appear only once.

Example 1:
```
Input: 1->1->2
Output: 1->2
```

Example 2:
```
Input: 1->1->2->3->3
Output: 1->2->3
```

```python
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
```

1st answer, Runtime: 24 ms, faster than 88.34% of Python online submissions for Remove Duplicates from Sorted List. Memory Usage: 11.8 MB, less than 53.57% of Python online submissions for Remove Duplicates from Sorted List.
```python
def deleteDuplicates(head):
    p=head
    while p:
        p1=p.next
        while p1 and p1.val==p.val:
            p1=p1.next
        print(p1)
        p.next=p1
        p=p.next
    return head
```