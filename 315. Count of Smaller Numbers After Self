315. Count of Smaller Numbers After Self
Hard

You are given an integer array nums and you have to return a new counts array. The counts array has the property where counts[i] is the number of smaller elements to the right of nums[i].

Example:

Input: [5,2,6,1]
Output: [2,1,1,0] 
Explanation:
To the right of 5 there are 2 smaller elements (2 and 1).
To the right of 2 there is only 1 smaller element (1).
To the right of 6 there is 1 smaller element (1).
To the right of 1 there is 0 smaller element.


```python
class Solution(object):
    def countSmaller(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
```


Merge sort solution. Runtime O(NlogN)
Runtime: 164 ms, faster than 44.80% of Python online submissions for Count of Smaller Numbers After Self.
Memory Usage: 16.3 MB, less than 25.00% of Python online submissions for Count of Smaller Numbers After Self.
```python
def countSmaller(nums):
    if not nums: return []
    nums=[(n,i) for i,n in enumerate(nums)]
    ans=[0]*len(nums)
    def func(arr):
        if len(arr)<=1:
            return arr
        m=len(arr)//2
        a1=func(arr[:m])
        a2=func(arr[m:])
        return merge(a1,a2)
    def merge(a1,a2):
        arr=[]
        while a1 and a2:
            e1,e2=a1[-1],a2[-1]
            if e1[0]>e2[0]:
                ans[e1[1]]=ans[e1[1]]+len(a2)
                arr.append(a1.pop())
            else:
                arr.append(a2.pop())
        while a1: arr.append(a1.pop())
        while a2: arr.append(a2.pop())
        return arr[::-1]
    print(func(nums))
    return ans
```


[9,4,6,5,5,2,6,1,0]



[26,78,27,100,33,67,90,23,66,5,38,7,35,23,52,22,83,51,98,69,81,32,78,28,94,13,2,97,3,76,99,51,9,21,84,66,65,36,100,41]
[10,27,10,35,12,22,28,8,19,2,12,2,9,6,12,5,17,9,19,12,14,6,12,5,12,3,0,10,0,7,8,4,0,0,4,3,2,0,1,0]
