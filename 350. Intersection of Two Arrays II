350. Intersection of Two Arrays II
Easy

Given two arrays, write a function to compute their intersection.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2,2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [4,9]
Note:

Each element in the result should appear as many times as it shows in both arrays.
The result can be in any order.
Follow up:

- What if the given array is already sorted? How would you optimize your algorithm?
- What if nums1's size is small compared to nums2's size? Which algorithm is better?
- What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?


Runtime O(n1+n2), space O(n1+n2)
Runtime: 36 ms, faster than 62.48% of Python online submissions for Intersection of Two Arrays II.
Memory Usage: 12.1 MB, less than 5.13% of Python online submissions for Intersection of Two Arrays II.
```python
from collections import Counter
class Solution(object):
    def intersect(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        c1,c2=Counter(nums1),Counter(nums2)
        arr=[]
        if len(c1)<=len(c2):
            for k,v in c1.items():
                if k in c2:
                    for i in xrange(min(v,c2[k])):
                        arr.append(k)
        else:
            for k,v in c2.items():
                if k in c1:
                    for i in xrange(min(v,c1[k])):
                        arr.append(k)
        return arr
```