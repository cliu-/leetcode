326. Power of Three
Easy

Given an integer, write a function to determine if it is a power of three.

Example 1:
Input: 27
Output: true

Example 2:
Input: 0
Output: false

Example 3:
Input: 9
Output: true

Example 4:
Input: 45
Output: false


Follow up:
Could you do it without using any loop / recursion?


```python
class Solution(object):
    def isPowerOfThree(self, n):
        """
        :type n: int
        :rtype: bool
        """
```


Pitfall case is `243`, if using `log(243,3)`, it will return `4.99999999`.
Runtime: 64 ms, faster than 82.20% of Python online submissions for Power of Three.
Memory Usage: 11.6 MB, less than 95.24% of Python online submissions for Power of Three.
```python
from math import log
def isPowerOfThree(n):
    if n<=0: return False
    m=int(log(n,3))
    return 3**m==n or 3**(m+1)==n or 3**(m-1)==n
```