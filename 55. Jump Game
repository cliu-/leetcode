55. Jump Game
Medium

Given an array of non-negative integers, you are initially positioned at the first index of the array.

Each element in the array represents your maximum jump length at that position.

Determine if you are able to reach the last index.

Example 1:

Input: [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.
Example 2:

Input: [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum
             jump length is 0, which makes it impossible to reach the last index.

```python
class Solution(object):
    def canJump(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
```

1st answer, failed at case `[2,0,0]`
```python
def canJump(nums):
    if len(nums)==1: return True
    if 0 not in set(nums): return True
    i_s,max_s=0,0
    for i in range(len(nums)):
        max_s=max(max_s,i+nums[i])
        if i_s==i:
            if i_s==max_s: return False
            i_s=max_s
    return True
```

2nd answer. Runtime: 68 ms, faster than 87.12% of Python online submissions for Jump Game. Memory Usage: 14.3 MB, less than 5.72% of Python online submissions for Jump Game.
```python
    if len(nums)==1: return True
    if 0 not in set(nums): return True
    i_s,max_s=0,0
    for i in range(len(nums)):
        max_s=max(max_s,i+nums[i])
        if i_s==i:
            if max_s>=len(nums)-1: return True
            if i_s==max_s: return False
            i_s=max_s
    return True
```