19. Remove Nth Node From End of List
Medium

Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:

Given n will always be valid.

Follow up:

Could you do this in one pass?

```python
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
```

1st answer, accepted.
```python
def removeNthFromEnd(head, n):
    if not head or not head.next: return None
    p0,arr=head,[]
    while head:
        arr.append(head)
        head=head.next
    i=len(arr)-n
    if arr[i]==p0:
        return head.next
    else:
        arr[i-1].next=arr[i].next
        return p0
```