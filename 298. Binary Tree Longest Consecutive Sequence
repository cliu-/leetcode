298. Binary Tree Longest Consecutive Sequence
Medium

Given a binary tree, find the length of the longest consecutive sequence path.

The path refers to any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The longest consecutive path need to be from parent to child (cannot be the reverse).

Example 1:

Input:

   1
    \
     3
    / \
   2   4
        \
         5

Output: 3

Explanation: Longest consecutive sequence path is 3-4-5, so return 3.
Example 2:

Input:

   2
    \
     3
    / 
   2    
  / 
 1

Output: 2 

Explanation: Longest consecutive sequence path is 2-3, not 3-2-1, so return 2.


```python
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def longestConsecutive(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
```

Runtime: 108 ms, faster than 69.97% of Python online submissions for Binary Tree Longest Consecutive Sequence.
Memory Usage: 22.4 MB, less than 7.69% of Python online submissions for Binary Tree Longest Consecutive Sequence.
```python
def longestConsecutive(root):
    ans=[0]
    def func(node):
        if not node: return 0
        l=func(node.left)
        r=func(node.right)
        if node.left and node.val+1==node.left.val: 
            l+=1
        else: 
            l=1
        if node.right and node.val+1==node.right.val:
            r+=1
        else:
            r=1
        m=max(l,r)
        if m>ans[0]: ans[0]=m
        return m
    func(root)
    return ans[0]
```

[1,null,3,2,4,null,null,null,5]