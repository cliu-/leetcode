227. Basic Calculator II
Medium

Implement a basic calculator to evaluate a simple expression string.

The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.

Example 1:

Input: "3+2*2"
Output: 7
Example 2:

Input: " 3/2 "
Output: 1
Example 3:

Input: " 3+5 / 2 "
Output: 5
Note:

You may assume that the given expression is always valid.
Do not use the eval built-in library function.


```python
class Solution(object):
    def calculate(self, s):
        """
        :type s: str
        :rtype: int
        """
```

Failed at case `"14-3/2"`, beacuse the division where involved negative number in Python is different.
```python
def calculate(s):
    i,st=0,[]
    while i<len(s):
        if s[i].isdigit():
            k=i
            while i<len(s) and s[i].isdigit(): i+=1
            n=int(s[k:i])
            if st and st[-1] in {'-','*','/'}:
                o=st.pop()
                if o=='-': n=-n
                elif o=='*': n*=st.pop()
                elif o=='/': n=st.pop()//n
            st.append(n)
        elif s[i] in {'-','*','/'}:
            st.append(s[i])
            i+=1
        else:
            i+=1
    return sum(st)
```


Fix the issue.
Runtime: 152 ms, faster than 35.03% of Python online submissions for Basic Calculator II.
Memory Usage: 14 MB, less than 52.94% of Python online submissions for Basic Calculator II.
```python
def calculate(s):
    i,st=0,[]
    while i<len(s):
        if s[i].isdigit():
            k=i
            while i<len(s) and s[i].isdigit(): i+=1
            n=int(s[k:i])
            if st and st[-1] in {'-','*','/'}:
                o=st.pop()
                if o=='-': n=-n
                elif o=='*': n*=st.pop()
                elif o=='/':
                    m=st.pop()
                    n=(abs(m)//n)*(-1 if m<0 else 1)
            st.append(n)
        elif s[i] in {'-','*','/'}:
            st.append(s[i])
            i+=1
        else:
            i+=1
    return sum(st)
```


"  93+12  * 9/4"
"  93-12  * 9/4"
"0-0"
" 3/2 "
"14-3/2"