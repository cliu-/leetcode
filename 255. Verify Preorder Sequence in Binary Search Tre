255. Verify Preorder Sequence in Binary Search Tree
Medium

Given an array of numbers, verify whether it is the correct preorder traversal sequence of a binary search tree.

You may assume each number in the sequence is unique.

Consider the following binary search tree: 

     5
    / \
   2   6
  / \
 1   3
Example 1:

Input: [5,2,6,1,3]
Output: false
Example 2:

Input: [5,2,1,3,6]
Output: true
Follow up:
Could you do it using only constant space complexity?


Runtime: 212 ms, faster than 69.85% of Python online submissions for Verify Preorder Sequence in Binary Search Tree.
Memory Usage: 12.4 MB, less than 100.00% of Python online submissions for Verify Preorder Sequence in Binary Search Tree.
```python
class Solution(object):
    def verifyPreorder(self, preorder):
        """
        :type preorder: List[int]
        :rtype: bool
        """
        i,low=0,-1<<31
        for n in preorder:
            if n<low: return False
            while i>0 and n>preorder[i-1]:
                low,i=preorder[i-1],i-1
            preorder[i],i=n,i+1
        return True
```