10. Regular Expression Matching
Hard

3208

599

Favorite

Share
Given an input string (s) and a pattern (p), implement regular expression matching with support for '.' and '*'.

'.' Matches any single character.
'*' Matches zero or more of the preceding element.
The matching should cover the entire input string (not partial).

Note:

s could be empty and contains only lowercase letters a-z.
p could be empty and contains only lowercase letters a-z, and characters like . or *.
Example 1:

Input:
s = "aa"
p = "a"
Output: false
Explanation: "a" does not match the entire string "aa".
Example 2:

Input:
s = "aa"
p = "a*"
Output: true
Explanation: '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes "aa".
Example 3:

Input:
s = "ab"
p = ".*"
Output: true
Explanation: ".*" means "zero or more (*) of any character (.)".
Example 4:

Input:
s = "aab"
p = "c*a*b"
Output: true
Explanation: c can be repeated 0 times, a can be repeated 1 time. Therefore, it matches "aab".
Example 5:

Input:
s = "mississippi"
p = "mis*is*p*."
Output: false

def isMatch(s, p):
    if s==p: return True
    if not p: return False
    i,j,star=0,0,-1
    while i<len(s) or j<len(p):
        match=True if j<len(p) and i<len(s) and (p[j]==s[i] or p[j]=='.') else False
        is_star=True if j+1<len(p) and p[j+1]=='*' else False
        if not match:
            if star>-1: j,i,star=star,i+1,-1
            else:
                if is_star: j=j+2
                else: return False
        else:
            if is_star:
                star,j=j,j+2
            else:
                i,j=i+1,j+1
    return True

assert(isMatch("aa","a*")==True)
assert(isMatch("aaa","a*a")==True)
assert(isMatch("aaaaaaaaaaaaab","a*a*a*a*a*a*a*a*a*a*c")==False)
assert(isMatch("","a*")==True)
assert(isMatch("ab","abc*d*")==True)
assert(isMatch("aab","c*a*b")==True)
assert(isMatch("mississippi","mis*is*p*.")==False)
assert(isMatch("mississippi","mis*is*.p*.")==True)
assert(isMatch("abcccd","a*b*b*c*d*e*c*")==True)
assert(isMatch("aaaaab","a*a*a*a*a*a*b")==True)
assert(isMatch("aaab","c*a*d*b")==True)