62. Unique Paths
Medium

A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

![Alt text](robot_maze.png)

Above is a 7 x 3 grid. How many possible unique paths are there?

Note: m and n will be at most 100.

Example 1:
```
Input: m = 3, n = 2
Output: 3
Explanation:
From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:
1. Right -> Right -> Down
2. Right -> Down -> Right
3. Down -> Right -> Right
```

Example 2:
```
Input: m = 7, n = 3
Output: 28
```

```python
class Solution(object):
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
```

1st solution. Runtime: 20 ms, faster than 50.48% of Python online submissions for Unique Paths.
Memory Usage: 11.8 MB, less than 55.17% of Python online submissions for Unique Paths.
```python
def uniquePaths(m, n):
    if m==0 or n==0: return 0
    matrix=[[1]*n for _ in range(m)]
    for i in range(1,m):
        for j in range(1,n):
            matrix[i][j]=matrix[i-1][j]+matrix[i][j-1]
    return matrix[-1][-1]
```