263. Ugly Number
Easy

Write a program to check whether a given number is an ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5.

Example 1:

Input: 6
Output: true
Explanation: 6 = 2 × 3

Example 2:

Input: 8
Output: true
Explanation: 8 = 2 × 2 × 2

Example 3:

Input: 14
Output: false 
Explanation: 14 is not ugly since it includes another prime factor 7.


Note:

1 is typically treated as an ugly number.
Input is within the 32-bit signed integer range: [−231,  231 − 1].


```python
class Solution(object):
    def isUgly(self, num):
        """
        :type num: int
        :rtype: bool
        """
```

Edge case: `1`. `1` is an urgly number.
Runtime: 16 ms, faster than 82.05% of Python online submissions for Ugly Number.
Memory Usage: 11.8 MB, less than 53.85% of Python online submissions for Ugly Number.
```python
def isUgly(num):
    if num<1: return False
    for i in [2,3,5]:
        while num%i==0:
            num=num//i
        if num==1: return True
    return False
```