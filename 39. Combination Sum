39. Combination Sum
Medium

Given a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.

The same repeated number may be chosen from candidates unlimited number of times.

Note:

- All numbers (including target) will be positive integers.
- The solution set must not contain duplicate combinations.

Example 1:
```
Input: candidates = [2,3,6,7], target = 7,
A solution set is:
[
  [7],
  [2,2,3]
]
```
Example 2:
```
Input: candidates = [2,3,5], target = 8,
A solution set is:
[
  [2,2,2,2],
  [2,3,3],
  [3,5]
]
```

```
class Solution(object):
    def combinationSum(self, candidates, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
```

1st answer, Runtime: 48 ms, faster than 73.31%. Memory Usage: 11.8 MB, less than 59.18%.
```python
def combinationSum(candidates, target):
    arr=sorted(candidates)
    ans=[]
    def func(arr,i,t,res=[]):
        if t==0:
            ans.append(res[::])
            return
        if t>=arr[i]:
            for j in range(i,len(arr)):
                func(arr,j,t-arr[j],res+[arr[j]])
        else:
            return
    for i in range(len(arr)):
        if arr[i]>target: continue

    func(arr,0,target)
    return ans
```