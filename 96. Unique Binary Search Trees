96. Unique Binary Search Trees
Medium

Given n, how many structurally unique BST's (binary search trees) that store values 1 ... n?

Example:

Input: 3
Output: 5
Explanation:
Given n = 3, there are a total of 5 unique BST's:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3


```python
class Solution(object):
    def numTrees(self, n):
        """
        :type n: int
        :rtype: int
        """ 
```

Runtime: 16 ms, faster than 71.17% of Python online submissions for Unique Binary Search Trees.
Memory Usage: 11.7 MB, less than 54.55% of Python online submissions for Unique Binary Search Trees.
```python
def numTrees(n):
    map={0:0,1:1}
    def func(n):
        if n in map: return map[n]
        ans=0
        for i in range(n):
            l=func(i)
            r=func(n-i-1)
            if l==0 or r==0:
                ans+=(l+r)
            ans+=l*r
        map[n]=ans
        return map[n]
    return func(n)
```