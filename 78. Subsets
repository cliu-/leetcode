78. Subsets
Medium

Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:
```
Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
``` 

```python
class Solution(object):
    def subsets(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
```

1st answer, wrong answer, the question is to return `subset`, my answer is to return `subarray`.
```python
def subsets(nums):
    ans,m=[],len(nums)
    for i in xrange(0,m):
        for j in xrange(i+1,m+1):
            ans.append(nums[i:j])
    return ans+[[]]
```

2nd answer. Runtime: 20 ms, faster than 70.21% of Python online submissions for Subsets. Memory Usage: 12 MB, less than 30.51% of Python online submissions for Subsets.
```python
def subsets(nums):
    ans=[]
    def func(i,cur=[]):
        ans.append(cur[::])
        if i==len(nums): return
        for j in xrange(i,len(nums)):
            cur.append(nums[j])
            func(j+1,cur)
            cur.pop()
    func(0)
    return ans
```