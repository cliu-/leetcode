256. Paint House
Easy

There are a row of n houses, each house can be painted with one of the three colors: red, blue or green. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.

The cost of painting each house with a certain color is represented by a n x 3 cost matrix. For example, costs[0][0] is the cost of painting house 0 with color red; costs[1][2] is the cost of painting house 1 with color green, and so on... Find the minimum cost to paint all houses.

Note:
All costs are positive integers.

Example:

Input: [[17,2,17],[16,16,5],[14,3,19]]
Output: 10
Explanation: Paint house 0 into blue, paint house 1 into green, paint house 2 into blue. 
             Minimum cost: 2 + 5 + 3 = 10.


```python
class Solution(object):
    def minCost(self, costs):
        """
        :type costs: List[List[int]]
        :rtype: int
        """
```

Runtime: 32 ms, faster than 100.00% of Python online submissions for Paint House.
Memory Usage: 11.8 MB, less than 16.67% of Python online submissions for Paint House.
```python
def minCost(costs):
    dp=[0,0,0]
    for h in costs:
        h[0]=h[0]+min(dp[1],dp[2])
        h[1]=h[1]+min(dp[0],dp[2])
        h[2]=h[2]+min(dp[0],dp[1])
        dp=h
    return min(dp)
```