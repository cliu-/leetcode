33. Search in Rotated Sorted Array
Medium

Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

Your algorithm's runtime complexity must be in the order of O(log n).

Example 1:
```
Input: nums = [4,5,6,7,0,1,2], target = 0
Output: 4
```
Example 2:
```
Input: nums = [4,5,6,7,0,1,2], target = 3
Output: -1
```

```python
class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
```
1st answer, failed at case `[3,1];1`.
```python
def search(nums, target):
    if not nums: return -1
    if len(nums)==1: return -1 if nums[0]!=target else 0
    l,r=0,len(nums)-1
    while l<=r:
        m=l+((r-l)//2)
        if nums[m]==target:
            return m
        if target<nums[m]:
            if nums[l]<nums[m]:
                if target<nums[l]: l=m+1
                elif target>nums[l]: r=m-1
                else: return l
            else:
                r=m-1
        else:
            if nums[l]<nums[m]:
                l=m+1
            else:
                if target<nums[r]:  l=m+1
                elif target>nums[r]: r=m-1
                else: return r
    return -1
```

2nd answer, accepted. Runtime: 24 ms, faster than 85.80%. Memory Usage: 12 MB, less than 67.35%.
```pythhon
def search(nums, target):
    if not nums: return -1
    if len(nums)==1: return -1 if nums[0]!=target else 0
    l,r=0,len(nums)-1
    while l<=r:
        m=l+((r-l)//2)
        if nums[m]==target:
            return m
        if target<nums[m]:
            if nums[l]<=nums[m]:
                if target<nums[l]: l=m+1
                elif target>nums[l]: r=m-1
                else: return l
            else:
                r=m-1
        else:
            if nums[l]<=nums[m]:
                l=m+1
            else:
                if target<nums[r]:  l=m+1
                elif target>nums[r]: r=m-1
                else: return r
    return -1
```

[8,9,0,1,2,4,5,6,7]
6

[3,1]
1

[3,1]
3

[4,5,6,7,0,1,2]
0

[4,5,6,7,0,1,2]
3

[6,1,3]
3