119. Pascal's Triangle II
Easy

Given a non-negative index k where k â‰¤ 33, return the kth index row of the Pascal's triangle.

![atl](PascalTriangleAnimated2.gif)

Note that the row index starts from 0.


In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:

Input: 3
Output: [1,3,3,1]
Follow up:

Could you optimize your algorithm to use only O(k) extra space?

```python
class Solution(object):
    def getRow(self, rowIndex):
        """
        :type rowIndex: int
        :rtype: List[int]
        """

```

Runtime: 16 ms, faster than 78.41% of Python online submissions for Pascal's Triangle II.
Memory Usage: 11.7 MB, less than 76.92% of Python online submissions for Pascal's Triangle II.
```python
def getRow(rowIndex):
    if rowIndex==0: return [1]
    arr=[0,1,0]
    for i in range(1,rowIndex+1):
        tmp=[0]*(i+1+2)
        for j in range(i+1):
            tmp[j+1]=arr[j]+arr[j+1]
        arr=tmp
    return arr[1:-1]
```