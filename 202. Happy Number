202. Happy Number
Easy

Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: 

Input: 19
Output: true
Explanation: 
1**2 + 9**2 = 82
8**2 + 2**2 = 68
6**2 + 8**2 = 100
1**2 + 0**2 + 0**2 = 1


```python
class Solution:
    def isHappy(self, n: int) -> bool:

```


Runtime: 20 ms, faster than 75.58% of Python online submissions for Happy Number.
Memory Usage: 11.9 MB, less than 10.00% of Python online submissions for Happy Number.
```python
def isHappy(self, n: int) -> bool:
    if n<=0: return False
    if n==1: return True
    v=set()
    def func(n):
        if n in v: return -1
        v.add(n)
        m=0
        while n>0:
            q,r=divmod(n,10)
            m,n=m+r**2,q
        if m==1: return 1
        return func(m)
    return func(n)==1
```