302. Smallest Rectangle Enclosing Black Pixels
Hard

An image is represented by a binary matrix with 0 as a white pixel and 1 as a black pixel. The black pixels are connected, i.e., there is only one black region. Pixels are connected horizontally and vertically. Given the location (x, y) of one of the black pixels, return the area of the smallest (axis-aligned) rectangle that encloses all black pixels.

Example:

Input:
[
  "0010",
  "0110",
  "0100"
]
and x = 0, y = 2

Output: 6


```python
class Solution(object):
    def minArea(self, image, x, y):
        """
        :type image: List[List[str]]
        :type x: int
        :type y: int
        :rtype: int
        """
```


Runtime: 376 ms, faster than 47.83% of Python online submissions for Smallest Rectangle Enclosing Black Pixels.
Memory Usage: 13.6 MB, less than 66.67% of Python online submissions for Smallest Rectangle Enclosing Black Pixels.
```python
def minArea(image, x, y):
    t=l=2**31
    b=r=0
    for i in xrange(len(image)):
        for j in xrange(len(image[0])):
            if image[i][j]=='1':
                t=min(i,t)
                b=max(i,b)
                l=min(j,l)
                r=max(j,r)
    return (b-t+1)*(r-l+1)
```