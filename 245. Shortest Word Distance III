245. Shortest Word Distance III
Medium

Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

word1 and word2 may be the same and they represent two individual words in the list.

Example:
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Input: word1 = “makes”, word2 = “coding”
Output: 1
Input: word1 = "makes", word2 = "makes"
Output: 3
Note:
You may assume word1 and word2 are both in the list.


```python
class Solution(object):
    def shortestWordDistance(self, words, word1, word2):
        """
        :type words: List[str]
        :type word1: str
        :type word2: str
        :rtype: int
        """

```


Runtime: 44 ms, faster than 84.34% of Python online submissions for Shortest Word Distance III.
Memory Usage: 16.5 MB, less than 62.50% of Python online submissions for Shortest Word Distance III.
```python
def shortestWordDistance(words, word1, word2):
    if not words: return 0
    ans=2**32
    if word1==word2:
        j=-1
        for i,w in enumerate(words):
            if w==word1:
                if j>-1 and i-j<ans:
                    ans=i-j
                j=i
    else:
        i1=i2=-1
        for i,w in enumerate(words):
            if w==word1:
                i1=i
                if i2>-1 and i1-i2<ans:
                    ans=i1-i2
            if w==word2:
                i2=i
                if i1>-1 and i2-i1<ans:
                    ans=i2-i1
    return ans
```
