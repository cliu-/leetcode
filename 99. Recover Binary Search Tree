99. Recover Binary Search Tree
Hard

Two elements of a binary search tree (BST) are swapped by mistake.

Recover the tree without changing its structure.

Example 1:
```
Input: [1,3,null,null,2]

   1
  /
 3
  \
   2

Output: [3,1,null,null,2]

   3
  /
 1
  \
   2
```


Example 2:
```
Input: [3,1,4,null,null,2]

  3
 / \
1   4
   /
  2

Output: [2,1,4,null,null,3]

  2
 / \
1   4
   /
  3
```

Follow up:

- A solution using O(n) space is pretty straight forward.
- Could you devise a constant space solution?

```python
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def recoverTree(self, root):
        """
        :type root: TreeNode
        :rtype: None Do not return anything, modify root in-place instead.
        """
```

1st answer, failed at case `[1,3,null,null,2]`
```python
def recoverTree(root):
    if not root: return root
    s,p,pre,e1,e2=[],root,TreeNode(-2**32),None,None
    while s or p:
        if e1 and e2: break
        while p:
            s.append(p)
            p=p.left
        p=s.pop()
        if p.val<pre.val:
            if not e1: e1,e2=pre,p
            else: e2=p
        pre,p=p,p.right

    e1.val,e2.val=e2.val,e1.val
    return root
```

The problem of 1st answer is the statement `if e1 and e2: break`, remove it should be fine.
Runtime: 40 ms, faster than 98.46% of Python online submissions for Recover Binary Search Tree. Memory Usage: 12.1 MB, less than 28.57% of Python online submissions for Recover Binary Search Tree.
```python
def recoverTree(root):
    if not root: return root
    s,p,pre,e1,e2=[],root,TreeNode(-2**32),None,None
    while s or p:
        while p:
            s.append(p)
            p=p.left
        p=s.pop()
        if p.val<pre.val:
            if not e1: e1,e2=pre,p
            else: e2=p
        pre,p=p,p.right

    e1.val,e2.val=e2.val,e1.val
    return root
```


[3,1,4,null,null,2]
[1,3,null,null,2] == [3,1,null,null,2]