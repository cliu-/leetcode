337. House Robber III
Medium

The thief has found himself a new place for his thievery again. There is only one entrance to this area, called the "root." Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that "all houses in this place forms a binary tree". It will automatically contact the police if two directly-linked houses were broken into on the same night.

Determine the maximum amount of money the thief can rob tonight without alerting the police.

Example 1:

Input: [3,2,3,null,3,null,1]

     3
    / \
   2   3
    \   \ 
     3   1

Output: 7 
Explanation: Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.
Example 2:

Input: [3,4,5,1,3,null,1]

     3
    / \
   4   5
  / \   \ 
 1   3   1

Output: 9
Explanation: Maximum amount of money the thief can rob = 4 + 5 = 9.



Wrong answer, this answer failed at case `[41,37,44,24,39,42,48,1,35,38,40,null,43,46,49,0,2,30,36,null,null,null,null,null,null,45,47,null,null,null,null,null,4,29,32,null,null,null,null,null,null,3,9,26,null,31,34,null,null,7,11,25,27,null,null,33,null,6,8,10,16,null,null,null,28,null,null,5,null,null,null,null,null,15,19,null,null,null,null,12,null,18,20,null,13,17,null,null,22,null,14,null,null,21,23]`, not sure what wrong with this answer.
```python
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def rob(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        def func(node):
            if not node: return (0, 0)
            l=func(node.left)
            r=func(node.right)
            v1=node.val+l[1]+r[1]
            v2=l[0]+max(r[0],r[1])
            v3=r[0]+max(l[0],l[1])
            # print('node={},l={},r={},v1={},v2={},v3={},v4={},res={}'.format(node.val,l,r,v1,v2,v3,(v1, max(v2,v3))))
            return (v1, max(v2,v3))
        v1,v2=func(root)
        return max(v1,v2)
```

Trying to fix the problem in above answer.
Runtime: 40 ms, faster than 66.60% of Python online submissions for House Robber III.
Memory Usage: 15.8 MB, less than 100.00% of Python online submissions for House Robber III.
```python
class Solution(object):
    def rob(self, root):
        def func(node):
            if not node: return (0, 0)
            l=func(node.left)
            r=func(node.right)
            v1=node.val+l[1]+r[1]
            return (max(v1,l[0]+r[0]), l[0]+r[0])
        v1,v2=func(root)
        return max(v1,v2)
```


Runtime: 48 ms, faster than 29.37% of Python online submissions for House Robber III.
Memory Usage: 16.9 MB, less than 14.29% of Python online submissions for House Robber III.
```python
class Solution(object):
    def rob(self, root):
        dp={}
        def func(node):
            if not node: return 0
            if node in dp: return dp[node]
            v1=0
            if node.left:
                v1=v1+func(node.left.left)+func(node.left.right)
            if node.right:
                v1=v1+func(node.right.left)+func(node.right.right)
            v2=func(node.left)+func(node.right)
            r=max(node.val+v1, v2)
            dp[node]=r
            return r
        return func(root)
```


[2,null,3,null,1]
3

[4,1,null,2,null,3]
7


[41,37,44,24,39,42,48,1,35,38,40,null,43,46,49,0,2,30,36,null,null,null,null,null,null,45,47,null,null,null,null,null,4,29,32,null,null,null,null,null,null,3,9,26,null,31,34,null,null,7,11,25,27,null,null,33,null,6,8,10,16,null,null,null,28,null,null,5,null,null,null,null,null,15,19,null,null,null,null,12,null,18,20,null,13,17,null,null,22,null,14,null,null,21,23]