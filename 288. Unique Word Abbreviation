288. Unique Word Abbreviation
Medium

An abbreviation of a word follows the form <first letter><number><last letter>. Below are some examples of word abbreviations:

a) it                      --> it    (no abbreviation)

     1
     ↓
b) d|o|g                   --> d1g

              1    1  1
     1---5----0----5--8
     ↓   ↓    ↓    ↓  ↓    
c) i|nternationalizatio|n  --> i18n

              1
     1---5----0
     ↓   ↓    ↓
d) l|ocalizatio|n          --> l10n
Assume you have a dictionary and given a word, find whether its abbreviation is unique in the dictionary. A word's abbreviation is unique if no other word from the dictionary has the same abbreviation.

Example:

Given dictionary = [ "deer", "door", "cake", "card" ]

isUnique("dear") -> false
isUnique("cart") -> true
isUnique("cane") -> false
isUnique("make") -> true



Runtime: 200 ms, faster than 49.30% of Python online submissions for Unique Word Abbreviation.
Memory Usage: 27.3 MB, less than 100.00% of Python online submissions for Unique Word Abbreviation.
```python
class ValidWordAbbr(object):

    def __init__(self, dictionary):
        """
        :type dictionary: List[str]
        """
        self.map={}
        for s in dictionary:
            if len(s)>=3:
                abb="{}{}{}".format(s[0],len(s)-2,s[-1])
                if abb not in self.map:
                    self.map[abb]=set()
                self.map[abb].add(s)
        

    def isUnique(self, word):
        """
        :type word: str
        :rtype: bool
        """
        if len(word)<3: return True
        abb="{}{}{}".format(word[0],len(word)-2,word[-1])
        if abb in self.map:
            return len(self.map[abb])==1 and word in self.map[abb]
        else:
            return True
        


# Your ValidWordAbbr object will be instantiated and called as such:
# obj = ValidWordAbbr(dictionary)
# param_1 = obj.isUnique(word)
```


["ValidWordAbbr","isUnique","isUnique","isUnique","isUnique"]
[[["deer","door","cake","card"]],["dear"],["cart"],["cane"],["make"]]
[null,false,true,false,true]

["ValidWordAbbr","isUnique"]
[[["hello"]],["hello"]]
[null,true]


["ValidWordAbbr","isUnique"]
[[["a"]],[""]]
[null,true]

["ValidWordAbbr","isUnique"]
[[["c","b","ab"]],["a"]]
[null,true]