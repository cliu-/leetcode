285. Inorder Successor in BST
Medium

Given a binary search tree and a node in it, find the in-order successor of that node in the BST.

The successor of a node p is the node with the smallest key greater than p.val.

Example 1:

![txt](285_example_1.png)

Input: root = [2,1,3], p = 1
Output: 2
Explanation: 1's in-order successor node is 2. Note that both p and the return value is of TreeNode type.


Example 2:

![txt](285_example_2.png)

Input: root = [5,3,6,2,4,null,null,1], p = 6
Output: null
Explanation: There is no in-order successor of the current node, so the answer is null.
 

Note:

If the given node has no in-order successor in the tree, return null.
It's guaranteed that the values of the tree are unique.


```python
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def inorderSuccessor(self, root, p):
        """
        :type root: TreeNode
        :type p: TreeNode
        :rtype: TreeNode
        """
```


Runtime: 56 ms, faster than 94.22% of Python online submissions for Inorder Successor in BST.
Memory Usage: 20 MB, less than 35.71% of Python online submissions for Inorder Successor in BST.

```python
def inorderSuccessor(root, p):
    n,t=root,None
    while n!=p:
        if p.val<n.val: n,t=n.left,n
        else: n=n.right
    if not n.right: return t
    n=n.right
    while n.left:
        n=n.left
    return n
```